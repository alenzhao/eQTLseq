geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN_ALL), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
# scale_fill_discrete() +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt_summary %>%
group_by(NSAMPLES) %>%
summarise(MEAN_ALL = mean(MEAN), MAX = max(MEAN), MIN = min(MEAN)) %>%
ungroup()
metrics_filt_summary = metrics_filt_summary %>%
left_join(means) %>%
mutate(isMAX = MEAN == MAX)
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN_ALL), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey() +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt_summary %>%
group_by(NSAMPLES) %>%
summarise(MEAN_ALL = mean(MEAN), MAX = max(MEAN), MIN = min(MEAN)) %>%
ungroup()
metrics_filt_summary = metrics_filt_summary %>%
left_join(means) %>%
mutate(isMAX = MEAN == MAX)
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN_ALL), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt %>%
group_by(NSAMPLES) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN_ALL), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt %>%
group_by(NSAMPLES) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
make_plot = function(ds, vr) {
ds_summary = ds %>%
group_by_('MODEL', 'NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by_('NSAMPLES', vr) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = ds %>%
group_by_('NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = ds, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = ds_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, color = MODEL),
color = 'black', fill = 'white', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
facet_grid(paste(vr, '~ NSAMPLES'), labeller = label_both)
)
}
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
make_plot = function(ds, vr) {
ds_summary = ds %>%
group_by_('MODEL', 'NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by_('NSAMPLES', vr) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = ds %>%
group_by_('NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = ds, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = ds_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_grid(paste(vr, '~ NSAMPLES'), labeller = label_both)
)
}
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
make_plot = function(ds, vr) {
ds_summary = ds %>%
group_by_('MODEL', 'NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by_('NSAMPLES', vr) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = ds %>%
group_by_('NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = ds, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = ds_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_grid(paste(vr, '~ NSAMPLES'), labeller = label_both)
)
}
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'SIZE')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'NOISE')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'OVERDISPERSION')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000), VALUE > 0) %>%
make_plot(vr = 'eQTLs')
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt %>%
group_by(NSAMPLES) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt %>%
group_by(NSAMPLES) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(name = 'Rank', start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt %>%
group_by(NSAMPLES) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
make_plot = function(ds, vr) {
ds_summary = ds %>%
group_by_('MODEL', 'NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by_('NSAMPLES', vr) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = ds %>%
group_by_('NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = ds, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = ds_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_grid(paste(vr, '~ NSAMPLES'), labeller = label_both)
)
}
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
make_plot = function(ds, vr) {
ds_summary = ds %>%
group_by_('MODEL', 'NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by_('NSAMPLES', vr) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN, ties.method = 'random') + 1)) %>%
ungroup()
means = ds %>%
group_by_('NSAMPLES', vr) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = ds, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = ds_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_grid(paste(vr, '~ NSAMPLES'), labeller = label_both)
)
}
metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT',
NSAMPLES %in% c(250, 2000)) %>%
make_plot(vr = 'eQTLs')
local({
metrics_filt = metrics %>% filter(METRIC == metric,
MODEL %in% mdls,
OVERDISPERSION == 'YES',
SIZE == 'LARGE',
NOISE == 'ABSENT')
metrics_filt_summary = metrics_filt %>%
group_by(MODEL, NSAMPLES) %>%
summarise(MEAN = mean(VALUE), SD = sd(VALUE), SE = SD / sqrt(n())) %>%
ungroup() %>%
group_by(NSAMPLES) %>%
mutate(RANK = as.factor(length(mdls) - rank(MEAN) + 1)) %>%
ungroup()
means = metrics_filt %>%
group_by(NSAMPLES) %>%
summarise(MEAN = mean(VALUE)) %>%
ungroup()
print(
ggplot() +
geom_jitter(data = metrics_filt, aes(x = factor(MODEL, levels = mdls, ordered = T), y = VALUE),
color = 'grey', width = 0.2, size = 0.01) +
geom_pointrange(data = metrics_filt_summary, aes(x = factor(MODEL, levels = mdls, ordered = T), y = MEAN,
ymax = MEAN + 2*SE, ymin = MEAN - 2*SE, fill = RANK),
color = 'black', shape = 21, size = 0.5) +
geom_hline(data = means, aes(yintercept = MEAN), linetype = 'dashed', size = 0.25) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), strip.background = element_blank()) +
scale_x_discrete(name = '') +
scale_y_continuous(name = metric) +
scale_fill_grey(start = 0, end = 1) +
facet_wrap(~NSAMPLES, labeller = label_both)
)
})
